resources:
- name: wire-server-deploy
  type: git
  source:
    uri: https://github.com/wireapp/wire-server-deploy
    branch: ((branch))

jobs:

- name: prepare-offline-artifact
  public: true
  plan:
    - get: wire-server-deploy
      params:
        depth: 1
        submodules: none
      trigger: true

    - task: branch_name
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: ubuntu
        inputs:
          - name: wire-server-deploy
        outputs:
          - name: branch
        params:
          HCLOUD_TOKEN: (( s3.access_key_id ))
          GPG_PRIVATE_KEY: (( s3.access_key_id ))
          DOCKER_LOGIN: (( s3.access_key_id ))
          CACHIX_SIGNING_KEY: (( s3.access_key_id ))
          CACHIX_AUTH_TOKEN: (( s3.access_key_id ))
          AWS_ACCESS_KEY_ID: (( s3.access_key_id ))
          AWS_SECRET_ACCESS_KEY: (( s3.secret_access_key ))
          AWS_REGION: "eu-west-1"
        run:
          path: sh
          args:
          - -exc
          - |
            # Install nix and cachix
            sh <(curl -L https://nixos.org/nix/install) --no-daemon
            nix-env -iA cachix -f https://cachix.org/api/v1/install

            cd wire-server-deploy
            # Install nix environment
            nix-env -f default.nix -iA env

            # Run offline build
            ./offline/ci.sh

            # Deploy offline environment to hetzner
            ./offline/cd.sh

            # Copy assets tarball to S3
            aws s3 cp assets.tgz s3://public.wire.com/artifacts/wire-server-deploy-static-${{ github.sha }}.tgz
            echo "Uploaded to: https://s3-$AWS_REGION.amazonaws.com/public.wire.com/artifacts/wire-server-deploy-static-${{ github.sha }}.tgz"
          
