---
# Our file server has the following structure:
# repos/
#       ubuntu
#       docker
#       â€¦
# registry/
# assets/


# People should use the  group_vars/k8s-cluster/offline.yml as an example
- name: "Set up offline repositories"
  hosts: all
  tags: never
  tasks:
    - name: Register offline repo key
      apt_key:
        url: "{{ ubuntu_repo_gpgkey }}"
        state: present
    - name: Register offline repo
      apt_repository:
        repo: "deb {{ ubuntu_repo_base_url }} bionic main"
        state: present

- name: "Preinstall and bootstrap"
  import_playbook: roles-external/kubespray/cluster.yml
  tags:
    - preinstall
    - bootstrap-os

      #- name: "Prepare offline"
      #  hosts: k8s-cluster:children
      #  roles:
      #    - role: prepare-offline
      #      when: offline
      # tasks:
      #   - name: install skopeo from static binary
      #   - name: Create skopeo dump tempdir
      #     tempfile:
      #       state: directory
      #       suffix: skopeo
      #     register: tempfile_skopeo
      #   - name: sync skopeo dump to each node
      #     copy:
      #       src: skopeo-dir
      #       dest: "{{ tempfile_skopeo.path }}"
      #   - name: skopeo sync
      #     cmd: skopeo sync dir:/var/tmp/skopeo-dir docker-daemon://
      #   - name: cleanup skopeo dir
      #     file:
      #       state: absent
      #       path: "{{ tempfile_skopeo.path }}"
      # when: offline

- name: "Run bootstrap cluster"
  import_playbook: roles-external/kubespray/cluster.yml
  tags: never

- hosts: etcd
  environment: "{{ proxy_env | default({}) }}"
  roles:
    - etcd-helpers

- hosts: k8s-cluster
  tasks:
    - name: Annotate nodes
      command: "kubectl annotate node --overwrite {{ inventory_hostname }} {{ item.key }}={{ item.value }}"
      when: node_annotations is defined
      with_dict: node_annotations

- import_playbook: kubernetes_logging.yml
