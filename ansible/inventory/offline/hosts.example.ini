# Configure 'ip' variable to bind kubernetes services on a # different ip than
# the default network interface.
# configure 'ansible_host' to the IP through which the bastion host will reach
# the node
[all]
# node1 ansible_host=XXXX etcd_member_name=etcd1 # ip=XXXX
# node2 ansible_host=XXXX etcd_member_name=etcd2 # ip=XXXX
# node3 ansible_host=XXXX etcd_member_name=etcd3 # ip=XXXX

# cassandra1 ansible_host=XXXX
# cassandra2 ansible_host=XXXX
# cassandra3 ansible_host=XXXX

# elasticsearch1 ansible_host=XXXX
# elasticsearch2 ansible_host=XXXX
# elasticsearch3 ansible_host=XXXX

# configure a bastion host if your nodes are not directly reachable from the
# host running ansible
# bastion ansible_host=XXXX ansible_user=some_user

[kube-master]
# node1
# node2
# node3

[etcd]
# node1 etcd_member_name=etcd1
# node2 etcd_member_name=etcd2
# node3 etcd_member_name=etcd3

[kube-node]
# node1
# node2
# node3

[k8s-cluster:children]
kube-master
kube-node

[cassandra]
# cassandra1
# cassandra2
# cassandra3
[cassandra_seed]
# cassandra1

[elasticsearch]
# elasticsearch1
# elasticsearch2
# elasticsearch3

[elasticsearch_master:children]
elasticsearch

[minio]
# minio1
# minio2
# minio3

[all:vars]
# ansible_user = root
# is_aws_environment = False

# Uncomment the following lines when you have both a public and private network
# and you want your databases to use the private one.
# cassandra_network_interface = eth1
# elasticsearch_network_interface = eth1
# minio_network_interface = eth1
# restund_network_interface = eth1


